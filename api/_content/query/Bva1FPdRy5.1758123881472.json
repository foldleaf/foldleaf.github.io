{"_path":"/essay/11.gin-gorm3错误处理与路由接口","_dir":"essay","_draft":false,"_partial":false,"_locale":"","title":"3.gin-gorm错误处理与路由接口","description":"通过gin-gorm之项目学习部分的学习，可以对项目的架构有深入的了解 🤟\n{% post_link \"gin-gorm1项目准备初始化\" %}\n{% post_link \"gin-gorm2数据库\" %}\n{% post_link \"gin-gorm3错误处理与路由接口\" %}\n{% post_link \"gin-gorm4用户模块接口编写\" %}\n{% post_link \"gin-gorm5密码加密\" %}\n{% post_link \"gin-gorm6编辑、删除用户\" %}","subtitle":"Error handling and routing interface","index":11,"date":"2023-02-13 00:00:03","lunar_date":"正月廿三","year":"2023","month":"02","month_en":"Feb","day":"13","tag":"技术","tag_en":"TECH","cover":"/img/rabbit/011.jpg","categories":"gin-gorm之项目学习","body":{"type":"root","children":[{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"通过"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"gin-gorm之项目学习"}]},{"type":"text","value":"部分的学习，可以对项目的架构有深入的了解 🤟\n{% post_link \"gin-gorm1项目准备初始化\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm2数据库\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm3错误处理与路由接口\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm4用户模块接口编写\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm5密码加密\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm6编辑、删除用户\" %}"},{"type":"element","tag":"br","props":{},"children":[]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h1","props":{"id":"错误处理"},"children":[{"type":"text","value":"错误处理"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"约定好状态码，便于错误处理，在utils下新建errmsg文件夹，在里面新建errmsg.go"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"const (\n    SUCCESS = 200\n    ERROR   = 500\n    //约定状态码\n    //code=1000...用户模块错误\n    ERROR_USERNAME_USED  = 1001\n    ERROR_PASSWORD_WRONG = 1002\n    ERROR_USER_NOT_EXIST = 1003\n\n    ERROR_TOKEN_NOT_EXIST = 1004\n    ERROR_TOKEN_OUT_TIME  = 1005\n    ERROR_TOKEN_WRONG     = 1006\n    ERROR_TYPE_WRONG      = 1007\n\n    //code=2000...文章模块错误\n\n    //code=3000...分类模块错误\n)\n\nvar codeMsg = map[int]string{\n    SUCCESS:               \"OK\",\n    ERROR:                 \"FAIL\",\n    ERROR_USERNAME_USED:   \"该用户名已存在\",\n    ERROR_PASSWORD_WRONG:  \"密码错误\",\n    ERROR_USER_NOT_EXIST:  \"用户不存在\",\n    ERROR_TOKEN_NOT_EXIST: \"token不存在\",\n    ERROR_TOKEN_OUT_TIME:  \"token已过期\",\n    ERROR_TOKEN_WRONG:     \"token错误\",\n    ERROR_TYPE_WRONG:      \" token格式错误\",\n}\n\nfunc GetErrMsg(code int) string {\n    return codeMsg[code]\n}\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"const (\n    SUCCESS = 200\n    ERROR   = 500\n    //约定状态码\n    //code=1000...用户模块错误\n    ERROR_USERNAME_USED  = 1001\n    ERROR_PASSWORD_WRONG = 1002\n    ERROR_USER_NOT_EXIST = 1003\n\n    ERROR_TOKEN_NOT_EXIST = 1004\n    ERROR_TOKEN_OUT_TIME  = 1005\n    ERROR_TOKEN_WRONG     = 1006\n    ERROR_TYPE_WRONG      = 1007\n\n    //code=2000...文章模块错误\n\n    //code=3000...分类模块错误\n)\n\nvar codeMsg = map[int]string{\n    SUCCESS:               \"OK\",\n    ERROR:                 \"FAIL\",\n    ERROR_USERNAME_USED:   \"该用户名已存在\",\n    ERROR_PASSWORD_WRONG:  \"密码错误\",\n    ERROR_USER_NOT_EXIST:  \"用户不存在\",\n    ERROR_TOKEN_NOT_EXIST: \"token不存在\",\n    ERROR_TOKEN_OUT_TIME:  \"token已过期\",\n    ERROR_TOKEN_WRONG:     \"token错误\",\n    ERROR_TYPE_WRONG:      \" token格式错误\",\n}\n\nfunc GetErrMsg(code int) string {\n    return codeMsg[code]\n}\n"}]}]},{"type":"element","tag":"h1","props":{"id":"路由接口"},"children":[{"type":"text","value":"路由接口"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在api/v1创建控制数据模型的接口user.go、article.go、category.go，以及控制登录的接口login.go\n以用户模块为例"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"//查询用户是否存在\nfunc UserExist(ctx *gin.Context) {\n\n}\n//查询用户\n//查询用户列表\nfunc GetUsers(ctx *gin.Context) {\n\n}\n//添加用户\nfunc AddUser(ctx *gin.Context) {\n\n}\n//编辑用户\nfunc EditUser(ctx *gin.Context) {\n\n}\n//删除用户\nfunc DeleteUser(ctx *gin.Context) {\n\n}\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"//查询用户是否存在\nfunc UserExist(ctx *gin.Context) {\n\n}\n//查询用户\n//查询用户列表\nfunc GetUsers(ctx *gin.Context) {\n\n}\n//添加用户\nfunc AddUser(ctx *gin.Context) {\n\n}\n//编辑用户\nfunc EditUser(ctx *gin.Context) {\n\n}\n//删除用户\nfunc DeleteUser(ctx *gin.Context) {\n\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在routes/router.go的v1路由组中创建路由接口，这种api为restful风格"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"router := r.Group(\"api/v1\")\n    {\n        //Use用户模块路由接口\n        router.POST(\"user/add\", v1.AddUser)\n        router.GET(\"users\", v1.GetUsers)\n        router.PUT(\"user/:id\", v1.EditUser)\n        router.DELETE(\"user/:id\", v1.DeleteUser)\n\n        //Category分类模块路由接口\n\n        //Article文章模块路由接口\n    }\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"router := r.Group(\"api/v1\")\n    {\n        //Use用户模块路由接口\n        router.POST(\"user/add\", v1.AddUser)\n        router.GET(\"users\", v1.GetUsers)\n        router.PUT(\"user/:id\", v1.EditUser)\n        router.DELETE(\"user/:id\", v1.DeleteUser)\n\n        //Category分类模块路由接口\n\n        //Article文章模块路由接口\n    }\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":3,"links":[]}},"_type":"markdown","_id":"content:essay:11.gin-gorm3错误处理与路由接口.md","_source":"content","_file":"essay/11.gin-gorm3错误处理与路由接口.md","_stem":"essay/11.gin-gorm3错误处理与路由接口","_extension":"md"}