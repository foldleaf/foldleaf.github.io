{"_path":"/essay/12.gin-gorm4用户模块接口","_dir":"essay","_draft":false,"_partial":false,"_locale":"","title":"4.gin-gorm用户模块接口","description":"通过gin-gorm之项目学习部分的学习，可以对项目的架构有深入的了解 🤟\n{% post_link \"gin-gorm1项目准备初始化\" %}\n{% post_link \"gin-gorm2数据库\" %}\n{% post_link \"gin-gorm3错误处理与路由接口\" %}\n{% post_link \"gin-gorm4用户模块接口编写\" %}\n{% post_link \"gin-gorm5密码加密\" %}\n{% post_link \"gin-gorm6编辑、删除用户\" %}","subtitle":"Interface of user module","index":12,"date":"2023-02-13 00:00:04","lunar_date":"正月廿三","year":"2023","month":"02","month_en":"Feb","day":"13","tag":"技术","tag_en":"TECH","cover":"/img/rabbit/012.jpg","categories":"gin-gorm之项目学习","body":{"type":"root","children":[{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"通过"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"gin-gorm之项目学习"}]},{"type":"text","value":"部分的学习，可以对项目的架构有深入的了解 🤟\n{% post_link \"gin-gorm1项目准备初始化\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm2数据库\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm3错误处理与路由接口\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm4用户模块接口编写\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm5密码加密\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm6编辑、删除用户\" %}"},{"type":"element","tag":"br","props":{},"children":[]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h1","props":{"id":"用户模块-增查"},"children":[{"type":"text","value":"用户模块-增、查"}]},{"type":"element","tag":"h2","props":{"id":"新增用户"},"children":[{"type":"text","value":"新增用户"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在model/User.go中编写，或者新建service层文件也可以"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 查询用户是否存在\nfunc CheckUser(name string) (code int) {\n    var users User\n    //查询使用该用户名的 id\n    db.Select(\"id\").Where(\"username =?\", name).First(&users)\n    //存在使用该用户名的 id\n    if users.ID > 0 {\n        return errmsg.ERROR_USERNAME_USED //1001\n    }\n    return errmsg.SUCCESS //200\n}\n\n// 新增用户   返回状态码\nfunc CreateUser(data *User) int {\n    err := db.Create(&data).Error\n    if err != nil {\n        return errmsg.ERROR //500\n    }\n    return errmsg.SUCCESS //200\n\n}\n\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 查询用户是否存在\nfunc CheckUser(name string) (code int) {\n    var users User\n    //查询使用该用户名的 id\n    db.Select(\"id\").Where(\"username =?\", name).First(&users)\n    //存在使用该用户名的 id\n    if users.ID > 0 {\n        return errmsg.ERROR_USERNAME_USED //1001\n    }\n    return errmsg.SUCCESS //200\n}\n\n// 新增用户   返回状态码\nfunc CreateUser(data *User) int {\n    err := db.Create(&data).Error\n    if err != nil {\n        return errmsg.ERROR //500\n    }\n    return errmsg.SUCCESS //200\n\n}\n\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在api/v1/user.go接口文件中补全添加用户AddUser的代码"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 添加用户\nfunc AddUser(ctx *gin.Context) {\n    var data model.User\n    _ = ctx.ShouldBindJSON(&data)\n    code = model.CheckUser(data.Username)\n    if code == errmsg.SUCCESS {\n        model.CreateUser(&data)\n    }\n    ctx.JSON(http.StatusOK, gin.H{\n        \"status\":  code,\n        \"data\":    data,\n        \"message\": errmsg.GetErrMsg(code),\n    })\n}\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 添加用户\nfunc AddUser(ctx *gin.Context) {\n    var data model.User\n    _ = ctx.ShouldBindJSON(&data)\n    code = model.CheckUser(data.Username)\n    if code == errmsg.SUCCESS {\n        model.CreateUser(&data)\n    }\n    ctx.JSON(http.StatusOK, gin.H{\n        \"status\":  code,\n        \"data\":    data,\n        \"message\": errmsg.GetErrMsg(code),\n    })\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在model中，我们写的是对数据库的操作以及操作的反馈\n在api中，我们写的是执行操作的逻辑(操作执行的条件、顺序)以及返回给前端的信息"}]},{"type":"element","tag":"h2","props":{"id":"查询用户"},"children":[{"type":"text","value":"查询用户"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"model/User.go"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 查询用户列表 分页\nfunc GetUsers(pageSize int, pageNum int) []User {\n    var users []User\n    err = db.Limit(pageSize).Offset((pageNum - 1) * pageSize).Find(&users).Error\n    if err != nil {\n        return nil\n    }\n    return users\n}\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 查询用户列表 分页\nfunc GetUsers(pageSize int, pageNum int) []User {\n    var users []User\n    err = db.Limit(pageSize).Offset((pageNum - 1) * pageSize).Find(&users).Error\n    if err != nil {\n        return nil\n    }\n    return users\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"api/v1/user.go"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 查询用户列表 分页\n// 前端需要传递分页的设置信息给后端\nfunc GetUsers(ctx *gin.Context) {\n    pageSize, _ := strconv.Atoi(ctx.Query(\"pagesize\"))\n    pageNum, _ := strconv.Atoi(ctx.Query(\"pagenum\"))\n    if pageSize == 0 {\n        pageSize = -1\n    }\n    if pageNum == 0 {\n        pageNum = -1\n    }\n    data := model.GetUsers(pageSize, pageNum)\n    code = errmsg.SUCCESS\n    ctx.JSON(http.StatusOK, gin.H{\n        \"status\":  code,\n        \"data\":    data,\n        \"message\": errmsg.GetErrMsg(code),\n    })\n}\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 查询用户列表 分页\n// 前端需要传递分页的设置信息给后端\nfunc GetUsers(ctx *gin.Context) {\n    pageSize, _ := strconv.Atoi(ctx.Query(\"pagesize\"))\n    pageNum, _ := strconv.Atoi(ctx.Query(\"pagenum\"))\n    if pageSize == 0 {\n        pageSize = -1\n    }\n    if pageNum == 0 {\n        pageNum = -1\n    }\n    data := model.GetUsers(pageSize, pageNum)\n    code = errmsg.SUCCESS\n    ctx.JSON(http.StatusOK, gin.H{\n        \"status\":  code,\n        \"data\":    data,\n        \"message\": errmsg.GetErrMsg(code),\n    })\n}\n"}]}]},{"type":"element","tag":"h2","props":{"id":"附加接口测试"},"children":[{"type":"text","value":"附加：接口测试"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"选择接口测试工具：postman、apipost等等"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在地址栏输入访问调用函数的路由地址"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"localhost:3000/api/v1/user/add\t"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"localhost:3000/api/v1/users"}]},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n这些已经在router中定义好，localhost:3000是你定义的服务器地址端口，/api/v1是你定义的路由组入口，后面的是调用函数的路由及参数"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"以上两个功能为例，使用apipost为例："}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"添加用户测试"}]},{"type":"text","value":"："}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"选择POST方式，地址栏输入localhost:3000/api/v1/user/add\n选择body-raw-json，输入User数据(json格式),点击发送"}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"{\n    \"username\": \"li8\",\n    \"password\": \"123456\",\n    \"role\": 0,\n}\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"{\n    \"username\": \"li8\",\n    \"password\": \"123456\",\n    \"role\": 0,\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"可以看到响应信息"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"查询用户测试"}]},{"type":"text","value":"："}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"需要先添加多个用户"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"选择GET方式，地址栏输入localhost:3000/api/v1/users"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"选择query，填写参数pagesize、pagenum,点击发送，可以看到响应信息"}]}],"toc":{"title":"","searchDepth":2,"depth":3,"links":[{"id":"新增用户","depth":2,"text":"新增用户"},{"id":"查询用户","depth":2,"text":"查询用户"},{"id":"附加接口测试","depth":2,"text":"附加：接口测试"}]}},"_type":"markdown","_id":"content:essay:12.gin-gorm4用户模块接口.md","_source":"content","_file":"essay/12.gin-gorm4用户模块接口.md","_stem":"essay/12.gin-gorm4用户模块接口","_extension":"md"}