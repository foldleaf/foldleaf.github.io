{"_path":"/essay/10.gin-gorm2数据库准备","_dir":"essay","_draft":false,"_partial":false,"_locale":"","title":"2.gin-gorm数据库准备","description":"通过gin-gorm之项目学习部分的学习，可以对项目的架构有深入的了解 🤟\n{% post_link \"gin-gorm1项目准备初始化\" %}\n{% post_link \"gin-gorm2数据库\" %}\n{% post_link \"gin-gorm3错误处理与路由接口\" %}\n{% post_link \"gin-gorm4用户模块接口编写\" %}\n{% post_link \"gin-gorm5密码加密\" %}\n{% post_link \"gin-gorm6编辑、删除用户\" %}","subtitle":"Database preparation","index":10,"date":"2023-02-13 00:00:02","lunar_date":"正月廿三","year":"2023","month":"02","month_en":"Feb","day":"13","tag":"技术","tag_en":"TECH","cover":"/img/rabbit/010.jpg","categories":"gin-gorm之项目学习","body":{"type":"root","children":[{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"通过"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"gin-gorm之项目学习"}]},{"type":"text","value":"部分的学习，可以对项目的架构有深入的了解 🤟\n{% post_link \"gin-gorm1项目准备初始化\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm2数据库\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm3错误处理与路由接口\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm4用户模块接口编写\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm5密码加密\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm6编辑、删除用户\" %}"},{"type":"element","tag":"br","props":{},"children":[]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h1","props":{"id":"安装gorm"},"children":[{"type":"text","value":"安装Gorm"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"安装gorm  现在是v2版本"}]},{"type":"element","tag":"pre","props":{"className":["language-bash"],"code":"go get -u gorm.io/gorm\n","language":"bash","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"go get -u gorm.io/gorm\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"注意除了gorm外还需要有数据库驱动，本人使用的是postgresql，使用其他数据库的请参考官网"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"import \"gorm.io/driver/postgres\"\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"import \"gorm.io/driver/postgres\"\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"然后根据提示导入，或者运行go mod tidy，该命令能够导入所有依赖的库并删除多余的库"}]},{"type":"element","tag":"h1","props":{"id":"数据模型"},"children":[{"type":"text","value":"数据模型"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在model文件夹下建立数据库入口文件 db.go"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 全局变量，db和error在其他文件里也需要使用\nvar (\n    db  *gorm.DB\n    err error\n)\nfunc InitDb() {\n    //使用占位符，然后用setting.go里的配置参数来替代\n    dsn := fmt.Sprintf(\"host=%s user=%s password=%s dbname=%s port=%s sslmode=disable TimeZone=Asia/Shanghai\",\n        utils.DbHost,\n        utils.DbUser,\n        utils.DbPassword,\n        utils.DbName,\n        utils.DbPort,\n    )\n    db, err = gorm.Open(postgres.Open(dsn), &gorm.Config{\n        //禁用默认表名的复数形式\n        NamingStrategy: schema.NamingStrategy{SingularTable: true},\n    })\n    if err != nil {\n        fmt.Println(\"数据库连接失败，请检查连接参数\", err)\n\n    }\n\n    //\n\n    //数据库自动迁移，括号内的参数为需要构建的数据模型结构体\n    db.AutoMigrate()\n\n    sqlDB, err := db.DB()\n    if err != nil {\n        fmt.Println(\"数据库连接设置出错，请检查连接参数\", err)\n    }\n    // SetMaxIdleConns 设置空闲连接池中连接的最大数量\n    sqlDB.SetMaxIdleConns(10)\n\n    // SetMaxOpenConns 设置打开数据库连接的最大数量。\n    sqlDB.SetMaxOpenConns(100)\n\n    // SetConnMaxLifetime 设置了连接可复用的最大时间。\n    //不能超过 gin 框架的连接超时时间\n    sqlDB.SetConnMaxLifetime(10 * time.Second)\n\n    //sqlDB.Close()\n}\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 全局变量，db和error在其他文件里也需要使用\nvar (\n    db  *gorm.DB\n    err error\n)\nfunc InitDb() {\n    //使用占位符，然后用setting.go里的配置参数来替代\n    dsn := fmt.Sprintf(\"host=%s user=%s password=%s dbname=%s port=%s sslmode=disable TimeZone=Asia/Shanghai\",\n        utils.DbHost,\n        utils.DbUser,\n        utils.DbPassword,\n        utils.DbName,\n        utils.DbPort,\n    )\n    db, err = gorm.Open(postgres.Open(dsn), &gorm.Config{\n        //禁用默认表名的复数形式\n        NamingStrategy: schema.NamingStrategy{SingularTable: true},\n    })\n    if err != nil {\n        fmt.Println(\"数据库连接失败，请检查连接参数\", err)\n\n    }\n\n    //\n\n    //数据库自动迁移，括号内的参数为需要构建的数据模型结构体\n    db.AutoMigrate()\n\n    sqlDB, err := db.DB()\n    if err != nil {\n        fmt.Println(\"数据库连接设置出错，请检查连接参数\", err)\n    }\n    // SetMaxIdleConns 设置空闲连接池中连接的最大数量\n    sqlDB.SetMaxIdleConns(10)\n\n    // SetMaxOpenConns 设置打开数据库连接的最大数量。\n    sqlDB.SetMaxOpenConns(100)\n\n    // SetConnMaxLifetime 设置了连接可复用的最大时间。\n    //不能超过 gin 框架的连接超时时间\n    sqlDB.SetConnMaxLifetime(10 * time.Second)\n\n    //sqlDB.Close()\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在model文件夹下建立数据模型文件 User.go 、Article.go 、Category.go\n创建结构体"}]},{"type":"element","tag":"pre","props":{"className":["language-GO"],"code":"type User struct {\n    gorm.Model\n\n    Username string `gorm:\"type:varchar(20);not null \" json:\"username\"`\n    Password string `gorm:\"type:varchar(20);not null \" json:\"password\"`\n    Role     int    `gorm:\"type:int; \" json:\"role\"`\n}\n\ntype Category struct {\n    gorm.Model\n\n    Name string `gorm:\"type:varchar(20);not null \" json:\"name\"`\n}\n\ntype Article struct {\n    gorm.Model\n    Title       string   `gorm:\"type:varchar(20);not null\" json:\"title\"`\n    Category    Category \n    CategoryId  int      `gorm:\"type:int;not null\" json:\"category_id\"`\n    Description string   `gorm:\"type:varchar(200)\" json:\"description\"`\n    Content     string   `gorm:\"type:text\" json:\"content\"`\n    Img         string   `gorm:\"type:varchar(200)\" json:\"img\"`\n}\n","language":"GO","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"type User struct {\n    gorm.Model\n\n    Username string `gorm:\"type:varchar(20);not null \" json:\"username\"`\n    Password string `gorm:\"type:varchar(20);not null \" json:\"password\"`\n    Role     int    `gorm:\"type:int; \" json:\"role\"`\n}\n\ntype Category struct {\n    gorm.Model\n\n    Name string `gorm:\"type:varchar(20);not null \" json:\"name\"`\n}\n\ntype Article struct {\n    gorm.Model\n    Title       string   `gorm:\"type:varchar(20);not null\" json:\"title\"`\n    Category    Category \n    CategoryId  int      `gorm:\"type:int;not null\" json:\"category_id\"`\n    Description string   `gorm:\"type:varchar(200)\" json:\"description\"`\n    Content     string   `gorm:\"type:text\" json:\"content\"`\n    Img         string   `gorm:\"type:varchar(200)\" json:\"img\"`\n}\n"}]}]},{"type":"element","tag":"h1","props":{"id":"用数据库迁移创建数据表"},"children":[{"type":"text","value":"用数据库迁移创建数据表"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"回到数据库入口文件 db.go，使用创建的结构体"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"//数据库自动迁移\n    db.AutoMigrate(&User{}, &Category{}, &Article{})\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"//数据库自动迁移\n    db.AutoMigrate(&User{}, &Category{}, &Article{})\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"最后在main.go中使用数据库初始化函数InitDb()"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"model.InitDb()\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"model.InitDb()\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"运行项目main.go,能够看到数据库根据model建立了数据表，数据库连接工具库本人使用的是DBeaver"}]}],"toc":{"title":"","searchDepth":2,"depth":3,"links":[]}},"_type":"markdown","_id":"content:essay:10.gin-gorm2数据库准备.md","_source":"content","_file":"essay/10.gin-gorm2数据库准备.md","_stem":"essay/10.gin-gorm2数据库准备","_extension":"md"}