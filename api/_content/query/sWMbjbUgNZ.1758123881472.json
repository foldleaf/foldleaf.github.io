{"_path":"/essay/14.gin-gorm6编辑、删除用户","_dir":"essay","_draft":false,"_partial":false,"_locale":"","title":"6.gin-gorm编辑、删除用户","description":"通过gin-gorm之项目学习部分的学习，可以对项目的架构有深入的了解 🤟\n{% post_link \"gin-gorm1项目准备初始化\" %}\n{% post_link \"gin-gorm2数据库\" %}\n{% post_link \"gin-gorm3错误处理与路由接口\" %}\n{% post_link \"gin-gorm4用户模块接口编写\" %}\n{% post_link \"gin-gorm5密码加密\" %}\n{% post_link \"gin-gorm6编辑、删除用户\" %}","subtitle":"Edit or delete users","index":14,"date":"2023-02-13 00:00:06","lunar_date":"正月廿三","year":"2023","month":"02","month_en":"Feb","day":"13","tag":"技术","tag_en":"TECH","cover":"/img/rabbit/014.jpg","categories":"gin-gorm之项目学习","body":{"type":"root","children":[{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"通过"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"gin-gorm之项目学习"}]},{"type":"text","value":"部分的学习，可以对项目的架构有深入的了解 🤟\n{% post_link \"gin-gorm1项目准备初始化\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm2数据库\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm3错误处理与路由接口\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm4用户模块接口编写\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm5密码加密\" %}"},{"type":"element","tag":"br","props":{},"children":[]},{"type":"text","value":"\n{% post_link \"gin-gorm6编辑、删除用户\" %}"},{"type":"element","tag":"br","props":{},"children":[]}]},{"type":"element","tag":"hr","props":{},"children":[]},{"type":"element","tag":"h1","props":{"id":"删除用户"},"children":[{"type":"text","value":"删除用户"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在model的User中写删除语句"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 删除用户\nfunc DeleteUser(id int) int {\n    err = db.Where(\"id=?\", id).Delete(&User{}).Error\n    if err != nil {\n        return errmsg.ERROR\n    }\n    return errmsg.SUCCESS\n}\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 删除用户\nfunc DeleteUser(id int) int {\n    err = db.Where(\"id=?\", id).Delete(&User{}).Error\n    if err != nil {\n        return errmsg.ERROR\n    }\n    return errmsg.SUCCESS\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在api的user.go中调用，返回前端信息"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 删除用户\nfunc DeleteUser(ctx *gin.Context) {\n    id, _ := strconv.Atoi(ctx.Param(\"id\"))\n    code = model.DeleteUser(id)\n    ctx.JSON(http.StatusOK, gin.H{\n        \"status\":  code,\n        \"message\": errmsg.GetErrMsg(code),\n    })\n\n}\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 删除用户\nfunc DeleteUser(ctx *gin.Context) {\n    id, _ := strconv.Atoi(ctx.Param(\"id\"))\n    code = model.DeleteUser(id)\n    ctx.JSON(http.StatusOK, gin.H{\n        \"status\":  code,\n        \"message\": errmsg.GetErrMsg(code),\n    })\n\n}\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"删除为软删除，即将数据标记为删除状态，数据仍保留在数据库中，以确保数据库的完整性和可恢复性"}]},{"type":"element","tag":"h1","props":{"id":"编辑用户"},"children":[{"type":"text","value":"编辑用户"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 编辑用户(密码除外)\nfunc EditUser(id int, data *User) int {\n    var maps = make(map[string]interface{})\n    maps[\"username\"] = data.Username\n    maps[\"role\"] = data.Role\n    err = db.Model(&User{}).Where(\"id=?\", id).Updates(maps).Error\n    if err != nil {\n        return errmsg.ERROR\n    }\n    return errmsg.SUCCESS\n}\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 编辑用户(密码除外)\nfunc EditUser(id int, data *User) int {\n    var maps = make(map[string]interface{})\n    maps[\"username\"] = data.Username\n    maps[\"role\"] = data.Role\n    err = db.Model(&User{}).Where(\"id=?\", id).Updates(maps).Error\n    if err != nil {\n        return errmsg.ERROR\n    }\n    return errmsg.SUCCESS\n}\n"}]}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 编辑用户\nfunc EditUser(ctx *gin.Context) {\n    var data model.User\n    id, _ := strconv.Atoi(ctx.Param(\"id\"))\n    ctx.ShouldBindJSON(data)\n    code = model.CheckUser(data.Username)\n    if code == errmsg.SUCCESS {\n        model.EditUser(id, &data)\n    }\n    if code == errmsg.ERROR_USERNAME_USED {\n        ctx.Abort()\n    }\n    ctx.JSON(http.StatusOK, gin.H{\n        \"status\":  code,\n        \"message\": errmsg.GetErrMsg(code),\n    })\n\n}\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 编辑用户\nfunc EditUser(ctx *gin.Context) {\n    var data model.User\n    id, _ := strconv.Atoi(ctx.Param(\"id\"))\n    ctx.ShouldBindJSON(data)\n    code = model.CheckUser(data.Username)\n    if code == errmsg.SUCCESS {\n        model.EditUser(id, &data)\n    }\n    if code == errmsg.ERROR_USERNAME_USED {\n        ctx.Abort()\n    }\n    ctx.JSON(http.StatusOK, gin.H{\n        \"status\":  code,\n        \"message\": errmsg.GetErrMsg(code),\n    })\n\n}\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":3,"links":[]}},"_type":"markdown","_id":"content:essay:14.gin-gorm6编辑、删除用户.md","_source":"content","_file":"essay/14.gin-gorm6编辑、删除用户.md","_stem":"essay/14.gin-gorm6编辑、删除用户","_extension":"md"}