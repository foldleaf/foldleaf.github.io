{"_path":"/essay/18.字符串处理","_dir":"","_draft":false,"_partial":false,"_locale":"","title":"字符串处理","description":"https://www.cnblogs.com/xdyixia/p/11896134.html","subtitle":"String handling","index":18,"date":"2023-03-06 000:00:00","lunar_date":"二月十五","year":"2023","month":"03","month_en":"Mar","day":"01","tag":"技术","tag_en":"TECH","cover":"/img/rabbit/018.jpg","categories":"golang","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://www.cnblogs.com/xdyixia/p/11896134.html","rel":["nofollow"]},"children":[{"type":"text","value":"https://www.cnblogs.com/xdyixia/p/11896134.html"}]}]},{"type":"element","tag":"h1","props":{"id":"strings-string操作"},"children":[{"type":"text","value":"strings string操作"}]},{"type":"element","tag":"h2","props":{"id":"contains"},"children":[{"type":"text","value":"Contains"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"字符串是否包含子字符串"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// s是否包含 substr 的字符串\nfunc strings.Contains(s string, substr string) bool\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// s是否包含 substr 的字符串\nfunc strings.Contains(s string, substr string) bool\n"}]}]},{"type":"element","tag":"h2","props":{"id":"join"},"children":[{"type":"text","value":"Join"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"字符串切片的元素通过某个字符串连接"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 常用逗号、分号或空格连接\nfunc Join(a []string, sep string) string\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 常用逗号、分号或空格连接\nfunc Join(a []string, sep string) string\n"}]}]},{"type":"element","tag":"h2","props":{"id":"index"},"children":[{"type":"text","value":"Index"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"查找字符串中子字符串的位置"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 找不到则返回 -1\nfunc Index(s, sep string) int\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 找不到则返回 -1\nfunc Index(s, sep string) int\n"}]}]},{"type":"element","tag":"h2","props":{"id":"repeat"},"children":[{"type":"text","value":"Repeat"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"复读某个字符串若干次"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// count 为重复 s 字符串的次数\nfunc Repeat(s string, count int) string\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// count 为重复 s 字符串的次数\nfunc Repeat(s string, count int) string\n"}]}]},{"type":"element","tag":"h2","props":{"id":"replace"},"children":[{"type":"text","value":"Replace"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"替换或删除字符串中某个子字符串"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// s 为要操作的字符串，old为s中旧有的字符串，new为用来替换的新的字符串\n// n为替换次数，小于0则全部替换\n// 删除：用空字符串进行替换则可实现删除\nfunc Replace(s, old, new string, n int) string\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// s 为要操作的字符串，old为s中旧有的字符串，new为用来替换的新的字符串\n// n为替换次数，小于0则全部替换\n// 删除：用空字符串进行替换则可实现删除\nfunc Replace(s, old, new string, n int) string\n"}]}]},{"type":"element","tag":"h2","props":{"id":"split"},"children":[{"type":"text","value":"Split"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"分割字符串,返回字符串切片"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 常用逗号、分号或空格作为分隔符\nfunc Split(s, sep string) []string\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 常用逗号、分号或空格作为分隔符\nfunc Split(s, sep string) []string\n"}]}]},{"type":"element","tag":"h2","props":{"id":"trim"},"children":[{"type":"text","value":"Trim"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在字符串的头部和尾部去除指定的字符串"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"// 常用于去空格\n// 只去头去尾，中间的忽略\nfunc Trim(s string, cutset string) string\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"// 常用于去空格\n// 只去头去尾，中间的忽略\nfunc Trim(s string, cutset string) string\n"}]}]},{"type":"element","tag":"h2","props":{"id":"fields"},"children":[{"type":"text","value":"Fields"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"去除s字符串的空格符，并且按照空格分割返回slice"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"func Fields(s string) []string\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"func Fields(s string) []string\n"}]}]},{"type":"element","tag":"h1","props":{"id":"strconv-string转换"},"children":[{"type":"text","value":"strconv string转换"}]},{"type":"element","tag":"h2","props":{"id":"append"},"children":[{"type":"text","value":"Append"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"将其他类型数据转换为字符串后追加"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"str := make([]byte, 0, 100)\nstr = strconv.AppendInt(str, 4567, 10) //以10进制方式追加\nstr = strconv.AppendBool(str, false)\nstr = strconv.AppendQuote(str, \"abcdefg\")\nstr = strconv.AppendQuoteRune(str, '单')\nfmt.Println(string(str)) //4567false\"abcdefg\"'单'\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"str := make([]byte, 0, 100)\nstr = strconv.AppendInt(str, 4567, 10) //以10进制方式追加\nstr = strconv.AppendBool(str, false)\nstr = strconv.AppendQuote(str, \"abcdefg\")\nstr = strconv.AppendQuoteRune(str, '单')\nfmt.Println(string(str)) //4567false\"abcdefg\"'单'\n"}]}]},{"type":"element","tag":"h2","props":{"id":"format"},"children":[{"type":"text","value":"Format"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"其他类型转换为字符串"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"a := strconv.FormatBool(false)\nb := strconv.FormatInt(1234, 10)\nc := strconv.FormatUint(12345, 10)\nd := strconv.Itoa(1023)\nfmt.Println(a, b, c, d) //false 1234 12345 1023\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"a := strconv.FormatBool(false)\nb := strconv.FormatInt(1234, 10)\nc := strconv.FormatUint(12345, 10)\nd := strconv.Itoa(1023)\nfmt.Println(a, b, c, d) //false 1234 12345 1023\n"}]}]},{"type":"element","tag":"h2","props":{"id":"prase"},"children":[{"type":"text","value":"Prase"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"字符串转换为其他类型"}]},{"type":"element","tag":"pre","props":{"className":["language-go"],"code":"func checkError(e error) {\n    if e != nil {\n        fmt.Println(e)\n    }\n}\n// 字符串不一定都能转换成其他类型，所以会有 error\na, err := strconv.ParseBool(\"false\")\ncheckError(err)\nb, err := strconv.ParseFloat(\"123.23\", 64)\ncheckError(err)\nc, err := strconv.ParseInt(\"1234\", 10, 64)\ncheckError(err)\nd, err := strconv.ParseUint(\"12345\", 10, 64)\ncheckError(err)\ne, err := strconv.Atoi(\"1023\")\ncheckError(err)\nfmt.Println(a, b, c, d, e) //false 123.23 1234 12345 1023\n","language":"go","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"func checkError(e error) {\n    if e != nil {\n        fmt.Println(e)\n    }\n}\n// 字符串不一定都能转换成其他类型，所以会有 error\na, err := strconv.ParseBool(\"false\")\ncheckError(err)\nb, err := strconv.ParseFloat(\"123.23\", 64)\ncheckError(err)\nc, err := strconv.ParseInt(\"1234\", 10, 64)\ncheckError(err)\nd, err := strconv.ParseUint(\"12345\", 10, 64)\ncheckError(err)\ne, err := strconv.Atoi(\"1023\")\ncheckError(err)\nfmt.Println(a, b, c, d, e) //false 123.23 1234 12345 1023\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":3,"links":[{"id":"contains","depth":2,"text":"Contains"},{"id":"join","depth":2,"text":"Join"},{"id":"index","depth":2,"text":"Index"},{"id":"repeat","depth":2,"text":"Repeat"},{"id":"replace","depth":2,"text":"Replace"},{"id":"split","depth":2,"text":"Split"},{"id":"trim","depth":2,"text":"Trim"},{"id":"fields","depth":2,"text":"Fields"},{"id":"append","depth":2,"text":"Append"},{"id":"format","depth":2,"text":"Format"},{"id":"prase","depth":2,"text":"Prase"}]}},"_type":"markdown","_id":"content:essay:18.字符串处理.md","_source":"content","_file":"essay/18.字符串处理.md","_stem":"essay/18.字符串处理","_extension":"md"}