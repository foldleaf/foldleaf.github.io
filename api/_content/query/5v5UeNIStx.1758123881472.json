{"_path":"/essay/33.pyside6环境搭建及快速入门","_dir":"essay","_draft":false,"_partial":false,"_locale":"","title":"pyside6环境搭建及快速入门","description":"在此之前，你应该保证已经安装好python了","subtitle":"pyside6 quick guide","index":33,"date":"2023-04-11","lunar_date":"闰二廿一","year":"2023","month":"04","month_en":"Apr","day":"11","tag":"技术","tag_en":"TECH","cover":"/img/rabbit/033.jpg","categories":"python","mathjax":true,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在此之前，你应该保证已经安装好python了"}]},{"type":"element","tag":"h1","props":{"id":"pyside6"},"children":[{"type":"text","value":"pyside6"}]},{"type":"element","tag":"pre","props":{"className":["language-py"],"code":"pip install pyside6\n","language":"py","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"pip install pyside6\n"}]}]},{"type":"element","tag":"h1","props":{"id":"vscode"},"children":[{"type":"text","value":"vscode"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"插件 : Qt for Python"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"设置-扩展-Qt for Python :\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"designer path"}]},{"type":"text","value":": D:\\anaconda3\\Lib\\site-packages\\PySide6\\designer.exe\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"rcc path"}]},{"type":"text","value":": D:\\anaconda3\\Scripts\\pyside6-rcc.exe\n"},{"type":"element","tag":"code","props":{"className":[]},"children":[{"type":"text","value":"uic path"}]},{"type":"text","value":": D:\\anaconda3\\Scripts\\pyside6-uic.exe"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"(因为我这个环境是有用anaconda的，选择pip install的位置(以上我的安装路径为D:\\anaconda3)即可,)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"也可以直接在setting.json里直接编辑:"}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"\"qtForPython.designer.path\": \"D:\\\\anaconda3\\\\Lib\\\\site-packages\\\\PySide6\\\\designer.exe\",\n\"qtForPython.rcc.path\": \"D:\\\\anaconda3\\\\Scripts\\\\pyside6-rcc.exe\",\n\"qtForPython.uic.path\": \"D:\\\\anaconda3\\\\Scripts\\\\pyside6-uic.exe\",\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\"qtForPython.designer.path\": \"D:\\\\anaconda3\\\\Lib\\\\site-packages\\\\PySide6\\\\designer.exe\",\n\"qtForPython.rcc.path\": \"D:\\\\anaconda3\\\\Scripts\\\\pyside6-rcc.exe\",\n\"qtForPython.uic.path\": \"D:\\\\anaconda3\\\\Scripts\\\\pyside6-uic.exe\",\n"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"在vscode中的左侧导航栏右键选择Create Qt UI File(designer),可以打开qt designer"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"设置-扩展-Python:设置自动补全的额外路径"}]},{"type":"element","tag":"pre","props":{"className":["language-json"],"code":"\"python.analysis.extraPaths\": [\n        \"D:\\\\anaconda3\\\\Lib\\\\site-packages\",\n        \"D:\\\\anaconda3\\\\Scripts\"\n    ],\n","language":"json","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"\"python.analysis.extraPaths\": [\n        \"D:\\\\anaconda3\\\\Lib\\\\site-packages\",\n        \"D:\\\\anaconda3\\\\Scripts\"\n    ],\n"}]}]},{"type":"element","tag":"h1","props":{"id":"最简可运行代码"},"children":[{"type":"text","value":"最简可运行代码"}]},{"type":"element","tag":"pre","props":{"className":["language-py"],"code":"# 导入包\nfrom PySide6.QtWidgets import QApplication, QWidget\n# sys 包仅用于访问命令行参数，图形化界面一般用不上\nimport sys\n\n# 每个应用程序只需要一个 QApplication 实例\n# 传入 sys.argv 以允许应用程序使用命令行参数(也可以忽略，图形化界面一般用不上)\napp = QApplication(sys.argv)\n\n# 创建一个 Qt 部件, 作为我们的窗口.\nwindow = QWidget()\n\n# 显示窗口，窗口默认是隐藏的\nwindow.show()  \n\n# 启动事件循环\napp.exec_()\n\n# 当退出程序后事件结束，程序结束\n\n","language":"py","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"# 导入包\nfrom PySide6.QtWidgets import QApplication, QWidget\n# sys 包仅用于访问命令行参数，图形化界面一般用不上\nimport sys\n\n# 每个应用程序只需要一个 QApplication 实例\n# 传入 sys.argv 以允许应用程序使用命令行参数(也可以忽略，图形化界面一般用不上)\napp = QApplication(sys.argv)\n\n# 创建一个 Qt 部件, 作为我们的窗口.\nwindow = QWidget()\n\n# 显示窗口，窗口默认是隐藏的\nwindow.show()  \n\n# 启动事件循环\napp.exec_()\n\n# 当退出程序后事件结束，程序结束\n\n"}]}]},{"type":"element","tag":"h1","props":{"id":"自定义窗口以及信号槽"},"children":[{"type":"text","value":"自定义窗口以及信号、槽"}]},{"type":"element","tag":"pre","props":{"className":["language-py"],"code":"from PySide6.QtWidgets import QApplication, QMainWindow, QPushButton,QLabel\n\n# 创建QMainWindow的子类，以自定义窗口\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        # 设置窗口标题\n        self.setWindowTitle(\"My App\")\n\n        # 按钮控件\n        button = QPushButton(\"点我点我\",self)\n        # 接着就可以设置这个控件的属性\n        button.setGeometry(0,0,200,200)\n        button.setToolTip(\"这是一个按钮\")\n        button.setText(\"我被点了\")\n        \n        # 点击按钮的信号\n        button.clicked.connect(self.hello)\n\n        # 同理，标签控件\n        label = QLabel(\"welcome\",self)\n        label.setGeometry(200,200,300,300)\n        label.setText(\"什么\")\n\n    # 接收点击按钮的信号(槽，即接收的函数)\n    def hello(self):\n        print(\"Hello\")\n        \nif __name__==\"__main__\":\n    app = QApplication()\n\n    window = MainWindow()\n    window.show()\n\n    app.exec()\n","language":"py","meta":""},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"text","value":"from PySide6.QtWidgets import QApplication, QMainWindow, QPushButton,QLabel\n\n# 创建QMainWindow的子类，以自定义窗口\nclass MainWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        # 设置窗口标题\n        self.setWindowTitle(\"My App\")\n\n        # 按钮控件\n        button = QPushButton(\"点我点我\",self)\n        # 接着就可以设置这个控件的属性\n        button.setGeometry(0,0,200,200)\n        button.setToolTip(\"这是一个按钮\")\n        button.setText(\"我被点了\")\n        \n        # 点击按钮的信号\n        button.clicked.connect(self.hello)\n\n        # 同理，标签控件\n        label = QLabel(\"welcome\",self)\n        label.setGeometry(200,200,300,300)\n        label.setText(\"什么\")\n\n    # 接收点击按钮的信号(槽，即接收的函数)\n    def hello(self):\n        print(\"Hello\")\n        \nif __name__==\"__main__\":\n    app = QApplication()\n\n    window = MainWindow()\n    window.show()\n\n    app.exec()\n"}]}]}],"toc":{"title":"","searchDepth":2,"depth":3,"links":[]}},"_type":"markdown","_id":"content:essay:33.pyside6环境搭建及快速入门.md","_source":"content","_file":"essay/33.pyside6环境搭建及快速入门.md","_stem":"essay/33.pyside6环境搭建及快速入门","_extension":"md"}